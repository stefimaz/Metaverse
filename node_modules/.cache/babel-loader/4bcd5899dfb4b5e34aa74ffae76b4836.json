{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n  buildUnableToPopLexerModeMessage: function (token) {\n    return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n  },\n  buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n    return \"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\");\n  }\n};","map":{"version":3,"mappings":";;;;;;AAEaA,oCAAwD;AACnEC,kCAAgC,EAAhC,UAAiCC,KAAjC,EAA8C;AAC5C,WAAO,yDAAuDA,KAAK,CAACC,KAA7D,GAAkE,4BAAzE;AACD,GAHkE;AAKnEC,kCAAgC,EAAhC,UACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,MALF,EAKiB;AAEf,WACE,6BAA2BJ,QAAQ,CAACK,MAAT,CACzBJ,WADyB,CAA3B,GAEC,gBAFD,GAEkBA,WAFlB,GAE6B,GAF7B,IAEmC,cAAYC,MAAZ,GAAkB,cAFrD,CADF;AAKD;AAjBkE,CAAxD","names":["exports","buildUnableToPopLexerModeMessage","token","image","buildUnexpectedCharactersMessage","fullText","startOffset","length","line","column","charAt"],"sources":["/Users/stephanemasyn/Desktop/FinTech/GitHub/Metaverse/node_modules/chevrotain/src/scan/lexer_errors_public.ts"],"sourcesContent":["import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}