{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { ArcballControls as ArcballControls$1 } from 'three-stdlib';\nconst ArcballControls = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    camera,\n    makeDefault,\n    regress,\n    domElement,\n    onChange,\n    onStart,\n    onEnd,\n    ...restProps\n  } = _ref;\n  const invalidate = useThree(_ref2 => {\n    let {\n      invalidate\n    } = _ref2;\n    return invalidate;\n  });\n  const defaultCamera = useThree(_ref3 => {\n    let {\n      camera\n    } = _ref3;\n    return camera;\n  });\n  const gl = useThree(_ref4 => {\n    let {\n      gl\n    } = _ref4;\n    return gl;\n  });\n  const events = useThree(_ref5 => {\n    let {\n      events\n    } = _ref5;\n    return events;\n  });\n  const set = useThree(_ref6 => {\n    let {\n      set\n    } = _ref6;\n    return set;\n  });\n  const get = useThree(_ref7 => {\n    let {\n      get\n    } = _ref7;\n    return get;\n  });\n  const performance = useThree(_ref8 => {\n    let {\n      performance\n    } = _ref8;\n    return performance;\n  });\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = useMemo(() => new ArcballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    };\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\nexport { ArcballControls };","map":{"version":3,"sources":["/Users/stephanemasyn/Desktop/FinTech/GitHub/Metaverse/node_modules/@react-three/drei/core/ArcballControls.js"],"names":["_extends","useThree","useFrame","React","forwardRef","useMemo","useEffect","ArcballControls","ArcballControls$1","ref","camera","makeDefault","regress","domElement","onChange","onStart","onEnd","restProps","invalidate","defaultCamera","gl","events","set","get","performance","explCamera","explDomElement","connected","controls","enabled","update","callback","e","connect","addEventListener","removeEventListener","dispose","old","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { ArcballControls as ArcballControls$1 } from 'three-stdlib';\n\nconst ArcballControls = /*#__PURE__*/forwardRef(({\n  camera,\n  makeDefault,\n  regress,\n  domElement,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = useMemo(() => new ArcballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    };\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { ArcballControls };\n"]},"metadata":{},"sourceType":"module"}