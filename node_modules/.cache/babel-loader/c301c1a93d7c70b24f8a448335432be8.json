{"ast":null,"code":"var _jsxFileName = \"/Users/stephanemasyn/Desktop/FinTech/GitHub/Metaverse/src/components/Plot.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Plot = _ref => {\n  let {\n    position,\n    size,\n    landId,\n    landInfo,\n    setLandName,\n    setLandOwner,\n    setHasOwner,\n    setLandId\n  } = _ref;\n\n  const clickHandler = () => {\n    setLandName(landInfo.name);\n    setLandId(landId);\n\n    if (landInfo.owner === '0x0000000000000000000000000000000000000000') {\n      setLandOwner('No Owner');\n      setHasOwner(false);\n    } else {\n      setLandOwner(landInfo.owner);\n      setHasOwner(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    onClick: clickHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      attach: \"geometry\",\n      args: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"#11E169\",\n      metalness: 0.5,\n      roughness: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/stephanemasyn/Desktop/FinTech/GitHub/Metaverse/src/components/Plot.js"],"names":["Plot","position","size","landId","landInfo","setLandName","setLandOwner","setHasOwner","setLandId","clickHandler","name","owner"],"mappings":";;;AAAA,MAAMA,IAAI,GAAG,QAA6F;AAAA,MAA5F;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA,WAApC;AAAiDC,IAAAA,YAAjD;AAA+DC,IAAAA,WAA/D;AAA4EC,IAAAA;AAA5E,GAA4F;;AACtG,QAAMC,YAAY,GAAG,MAAM;AACvBJ,IAAAA,WAAW,CAACD,QAAQ,CAACM,IAAV,CAAX;AACAF,IAAAA,SAAS,CAACL,MAAD,CAAT;;AAEA,QAAIC,QAAQ,CAACO,KAAT,KAAmB,4CAAvB,EAAqE;AACjEL,MAAAA,YAAY,CAAC,UAAD,CAAZ;AACAC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAHD,MAGO;AACHD,MAAAA,YAAY,CAACF,QAAQ,CAACO,KAAV,CAAZ;AACAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GAXD;;AAaA,sBACI;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,OAAO,EAAEQ,YAAnC;AAAA,4BACI;AAAqB,MAAA,MAAM,EAAC,UAA5B;AAAuC,MAAA,IAAI,EAAEP;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAsB,MAAA,KAAK,EAAE,SAA7B;AAAwC,MAAA,SAAS,EAAE,GAAnD;AAAwD,MAAA,SAAS,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApBD;;KAAMF,I;AAsBN,eAAeA,IAAf","sourcesContent":["const Plot = ({ position, size, landId, landInfo, setLandName, setLandOwner, setHasOwner, setLandId }) => {\n    const clickHandler = () => {\n        setLandName(landInfo.name)\n        setLandId(landId)\n\n        if (landInfo.owner === '0x0000000000000000000000000000000000000000') {\n            setLandOwner('No Owner')\n            setHasOwner(false)\n        } else {\n            setLandOwner(landInfo.owner)\n            setHasOwner(true)\n        }\n    }\n\n    return (\n        <mesh position={position} onClick={clickHandler}>\n            <planeBufferGeometry attach=\"geometry\" args={size} />\n            <meshStandardMaterial color={\"#11E169\"} metalness={0.5} roughness={0} />\n        </mesh>\n    );\n}\n\nexport default Plot;"]},"metadata":{},"sourceType":"module"}